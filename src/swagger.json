{
  "openapi": "3.0.3",
  "info": {
    "title": "To do next app",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4500"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign up",
        "description": "Sign up",
        "operationId": "signUp",
        "requestBody": {
          "description": "User data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login to the app",
        "operationId": "login",
        "requestBody": {
          "description": "User login data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "description": "Logout from the app",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verifyToken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify token",
        "description": "Verify token",
        "operationId": "verifyToken",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyTokenDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user data",
        "description": "Get current user data",
        "operationId": "getCurrentUserData",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit current user",
        "description": "Edit current user",
        "operationId": "editCurrentUser",
        "requestBody": {
          "description": "User data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/user-in-project/project/{projectId}": {
      "get": {
        "tags": [
          "User in project"
        ],
        "summary": "Get current user data",
        "description": "Get user page by project id",
        "operationId": "getUserPageByProjectId",
        "parameters": [
          {
            "in": "query",
            "name": "userInProjectFilteredQuery",
            "schema": {
              "$ref": "#/components/schemas/UserInProjectFilteredQuery"
            }
          },
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserInProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User in project"
        ],
        "summary": "Edit current user data by project id",
        "description": "Edit current user data by project id",
        "operationId": "editCurrentUserDataByProjectId",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User in project data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserInProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/user-in-project/user/{userId}/project/{projectId}": {
      "get": {
        "tags": [
          "User in project"
        ],
        "summary": "Get user by user id and by project id",
        "description": "Get user by user id and by project id",
        "operationId": "getUserByUserIdAndProjectId",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User in project"
        ],
        "summary": "Edit member type by user id and project id",
        "description": "Edit member type by user id and project id",
        "operationId": "editMemberTypeByUserIdAndProjectId",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User in project data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserInProjectMemberTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/project": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add project",
        "description": "Add project",
        "operationId": "addProject",
        "requestBody": {
          "description": "Add project data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBasicDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get current user project list",
        "description": "Get current user project list",
        "operationId": "getCurrentUserProjectsList",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBasicDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/project/{id}": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project",
        "description": "Edit project",
        "operationId": "editProject",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Edit project data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project leader by id",
        "description": "Edit project leader by id",
        "operationId": "editProjectLeaderById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Edit project leader data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectLeaderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project by id",
        "description": "Get project by id",
        "operationId": "getProjectById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get certain task",
        "description": "Get certain task by id",
        "operationId": "getCertainTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Edit certain task",
        "description": "Edit certain task by id",
        "operationId": "editCertainTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Edit project data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Task"
        ],
        "summary": "Change assigned user",
        "description": "Change assigned user",
        "operationId": "changeTaskAssignedUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User in project basic data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInProjectBasicDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Get certain task",
        "description": "Get certain task by id",
        "operationId": "getCertainTask",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/task/{id}/status/{status}": {
      "patch": {
        "tags": [
          "Task"
        ],
        "summary": "Change task status",
        "description": "Change task status",
        "operationId": "changeTaskStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "status",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/task/project/{projectId}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create new task",
        "description": "Create new task",
        "operationId": "addTaskByProjectId",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get task page by project id",
        "description": "Get task page by project id",
        "operationId": "getTaskPageByProjectId",
        "parameters": [
          {
            "in": "query",
            "name": "taskFilteredQuery",
            "schema": {
              "$ref": "#/components/schemas/TaskFilteredQuery"
            }
          },
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageTaskBasicDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/work-log/task/{taskId}": {
      "post": {
        "tags": [
          "Work log"
        ],
        "summary": "Create new work log",
        "description": "Create new work log",
        "operationId": "addWorkLogByTaskId",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkLogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Work log"
        ],
        "summary": "Get work log list by task id",
        "description": "Get work log list by task id",
        "operationId": "getWorkLogListByTaskId",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkLogDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/work-log/{id}": {
      "put": {
        "tags": [
          "Work log"
        ],
        "summary": "Edit certain work log",
        "description": "Edit certain work log",
        "operationId": "editWorkLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Work log"
        ],
        "summary": "Delete certain work log",
        "description": "Delete certain work log",
        "operationId": "deleteWorkLog",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessageDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string",
            "example": "firstName"
          },
          "email": {
            "type": "string",
            "example": "lastName"
          },
          "password": {
            "type": "string",
            "example": "email"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "email"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "ProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectTypes"
          },
          "leader": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInProjectBasicDto"
              }
            ]
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInProjectBasicDto"
            }
          },
          "projectManagementType": {
            "$ref": "#/components/schemas/ProjectManagementType"
          }
        }
      },
      "ProjectBasicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectTypes"
          },
          "projectManagementType": {
            "$ref": "#/components/schemas/ProjectManagementType"
          }
        }
      },
      "AddProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectTypes"
          },
          "projectManagementType": {
            "$ref": "#/components/schemas/ProjectManagementType"
          }
        }
      },
      "EditProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProjectTypes"
          },
          "projectManagementType": {
            "$ref": "#/components/schemas/ProjectManagementType"
          }
        }
      },
      "EditProjectLeaderDto": {
        "type": "object",
        "properties": {
          "leaderId": {
            "type": "string"
          }
        }
      },
      "TaskBasicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "assignedUser": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInProjectMinimumDto"
              }
            ]
          },
          "createdAt": {
            "type": "string"
          }
        }
      },
      "TaskDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskBasicDto"
          },
          {
            "type": "object",
            "properties": {
              "childrenTasks": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/TaskBasicDto"
                }
              },
              "parentTask": {
                "type": "object",
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskBasicDto"
                  }
                ]
              },
              "workLogs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkLogDto"
                }
              }
            }
          }
        ]
      },
      "AddTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "assignedUser": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInProjectBasicDto"
              }
            ]
          },
          "parentTask": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskBasicDto"
              }
            ]
          }
        }
      },
      "EditTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "assignedUser": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInProjectMinimumDto"
              }
            ]
          },
          "parentTask": {
            "type": "object",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskBasicDto"
              }
            ]
          },
          "childrenTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskBasicDto"
            }
          }
        }
      },
      "UserBasicDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string",
            "example": "firstName"
          },
          "email": {
            "type": "string",
            "example": "lastName"
          }
        }
      },
      "UserDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBasicDto"
          },
          {
            "type": "object",
            "properties": {
              "projects": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/ProjectBasicDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "EditUserDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDto"
          },
          {
            "type": "object",
            "properties": {
              "password": {
                "type": "string"
              }
            }
          }
        ]
      },
      "AddUserInProjectDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "EditUserInProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "EditUserInProjectMemberTypeDto": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/UserInProjectType"
          }
        }
      },
      "UserInProjectMinimumDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "UserInProjectBasicDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBasicDto"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "isLeader": {
                "type": "boolean"
              },
              "memberType": {
                "$ref": "#/components/schemas/UserInProjectType"
              }
            }
          }
        ]
      },
      "UserInProjectDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserInProjectBasicDto"
          },
          {
            "type": "object",
            "properties": {
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskBasicDto"
                }
              }
            }
          }
        ]
      },
      "WorkLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "AddWorkLogDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "EditWorkLogDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          }
        }
      },
      "VerifyTokenDto": {
        "type": "object",
        "properties": {
          "isMyTokenValid": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "TaskFilteredQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "$ref": "#/components/schemas/TaskBasicDto"
          }
        ]
      },
      "UserInProjectFilteredQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilteredQuery"
          },
          {
            "$ref": "#/components/schemas/UserInProjectBasicDto"
          }
        ]
      },
      "FilteredQuery": {
        "type": "object",
        "properties": {
          "size": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "sort": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/SortDirection"
                }
              ]
            }
          }
        }
      },
      "PageTaskBasicDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/TaskBasicDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "PageUserInProjectDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Page"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "type": "array",
                "items": [
                  {
                    "$ref": "#/components/schemas/UserInProjectBasicDto"
                  }
                ]
              }
            }
          }
        ]
      },
      "Page": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "numberOfElements": {
            "type": "number"
          }
        }
      },
      "SuccessMessageDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ServerErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        }
      },
      "ErrorCode": {
        "type": "string",
        "enum": [
          "No private key",
          "Unable to generate token",
          "Token expired",
          "Token wrong token",
          "Passwords do not match",
          "Password is required",
          "Password should have minimum ten characters,at least one small character, one big character, one number, one special character",
          "Email is required",
          "This email is already in use",
          "First name is required",
          "Last name is required",
          "Can not find user",
          "No valid id included",
          "Title is required",
          "Title must be minimum five characters",
          "Task type is required",
          "Type epic can not have parent task",
          "Task must exist",
          "This task can not have children",
          "Task status must exist",
          "Key is required",
          "Key must be max ten characters",
          "Name is required",
          "Project type is required",
          "Project management type is required",
          "User in project type is required",
          "New leader must exist",
          "Project must exist",
          "You must provide minimum one value to change",
          "Project id is required",
          "Project leader id is required",
          "Project does not exist",
          "User is not member of this project",
          "Internal server error",
          "Path not found",
          "Unauthorized",
          "Forbidden"
        ]
      },
      "SortDirection": {
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "ProjectTypes": {
        "type": "string",
        "enum": [
          "SOFTWARE"
        ]
      },
      "ProjectManagementType": {
        "type": "string",
        "enum": [
          "KANBAN",
          "SCRUM"
        ]
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "EPIC",
          "STORY",
          "TASK",
          "BUG",
          "SUB_TASK",
          "SUB_BUG"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "TO_DO",
          "IN_PROGRESS",
          "CODE_REVIEW",
          "READY_FOR_TEST",
          "IN_TEST",
          "DONE",
          "WONT_DO",
          "BLOCKED"
        ]
      },
      "UserInProjectType": {
        "type": "string",
        "enum": [
          "ADMINISTRATOR",
          "MEMBER",
          "OBSERVER"
        ]
      }
    }
  }
}